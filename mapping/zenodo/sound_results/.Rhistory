ymin = lb,
ymax = ub))+
geom_pointrange()+
theme_light()+
xlab("Distance to coast (km)")+
ylab("Odds of visiting the coast weekly\ncompared to >50 km")+
scale_y_continuous(breaks = seq(0, 14, 2))
ggplot(data = lake_prox_df,
aes(x = lake_prox,
y = odds,
ymin = lb,
ymax = ub))+
geom_pointrange()+
theme_light()+
xlab("Distance to lakes (km)")+
ylab("Odds of visiting the lakes weekly\ncompared to >5 km")
par(mfrow=c(1, 3))
ggplot(data = coast_prox_df,
aes(x = coast_prox,
y = odds,
ymin = lb,
ymax = ub))+
geom_pointrange()+
theme_light()+
xlab("Distance to coast (km)")+
ylab("Odds of visiting the coast weekly\ncompared to >50 km")+
scale_y_continuous(breaks = seq(0, 14, 2))
coast_prox_df$blue_space<-"Coast"
lake_prox_df$blue_space<-"Lake"
river_prox_df$blue_space<-"river"
river_prox_df$blue_space<-"River"
names(coast_prox_df)[1]<-"Proximity"
names(lake_prox_df)[1]<-"Proximity"
names(river_prox_df)[1]<-"Proximity"
blue_prox<-rbind(coast_prox_df,
lake_prox_df,
river_prox_df)
names(blue_prox)
ggplot(blue_prox,
aes(x = Proximity,
y = odds,
ymin = lb,
ymax = ub))+
geom_pointrange()+
facet_wrap(~blue_space)
ggplot(blue_prox,
aes(x = Proximity,
y = odds,
ymin = lb,
ymax = ub))+
geom_pointrange()+
facet_grid(~blue_space)+
theme_light()+
ylab("Odds of visiting the rivers weekly\ncompared to >5 km")
install.packages("gridExtra")
p_coast<-ggplot(data = coast_prox_df,
aes(x = coast_prox,
y = odds,
ymin = lb,
ymax = ub))+
geom_pointrange()+
theme_light()+
xlab("Distance to coast (km)")+
ylab("Odds of visiting the coast weekly\ncompared to >50 km")+
scale_y_continuous(breaks = seq(0, 14, 2))
p_lake<-ggplot(data = lake_prox_df,
aes(x = lake_prox,
y = odds,
ymin = lb,
ymax = ub))+
geom_pointrange()+
theme_light()+
xlab("Distance to lakes (km)")+
ylab("Odds of visiting the lakes weekly\ncompared to >5 km")
p_river<-ggplot(data = river_prox_df,
aes(x = river_prox,
y = odds,
ymin = lb,
ymax = ub))+
geom_pointrange()+
theme_light()+
xlab("Distance to rivers (km)")+
ylab("Odds of visiting the rivers weekly\ncompared to >5 km")
library(gridExtra)
grid.arrange(p_coast, p_lake,p_river, ncol=3)
p_coast
names(coast_prox_df)
p_coast<-ggplot(data = coast_prox_df,
aes(x = Proximity,
y = odds,
ymin = lb,
ymax = ub))+
geom_pointrange()+
theme_light()+
xlab("Distance to coast (km)")+
ylab("Odds of visiting the coast weekly\ncompared to >50 km")+
scale_y_continuous(breaks = seq(0, 14, 2))
p_lake<-ggplot(data = lake_prox_df,
aes(x = Proximity,
y = odds,
ymin = lb,
ymax = ub))+
geom_pointrange()+
theme_light()+
xlab("Distance to lakes (km)")+
ylab("Odds of visiting the lakes weekly\ncompared to >5 km")
p_river<-ggplot(data = river_prox_df,
aes(x = Proximity,
y = odds,
ymin = lb,
ymax = ub))+
geom_pointrange()+
theme_light()+
xlab("Distance to rivers (km)")+
ylab("Odds of visiting the rivers weekly\ncompared to >5 km")
grid.arrange(p_coast, p_lake,p_river, ncol=3)
coast_prox<-c("0 - 1", ">1 - 5", ">5 - 25",
">25 - 50")
odds<-c(8.4, 4.7, 2.2, 1.4)
lb<-c(5.3, 2.9, 1.6, 1)
ub<-c(13.3, 7.6, 3.1, 2)
coast_prox_df<-data.frame(coast_prox,
odds,
lb, ub)
coast_prox_df
rm(coast_prox)
rm(lb)
rm(ub)
rm(odds)
is.factor(coast_prox_df$coast_prox)
levels(coast_prox_df$coast_prox)
coast_prox_df$coast_prox = factor(coast_prox_df$coast_prox,
levels(coast_prox_df$coast_prox)[c(4, 1, 3, 2)])
library(ggplot2)
library(ggthemes)
p_coast<-ggplot(data = coast_prox_df,
aes(x = Proximity,
y = odds,
ymin = lb,
ymax = ub))+
geom_pointrange()+
theme_light()+
xlab("Distance to coast (km)")+
ylab("Odds of visiting the coast weekly\ncompared to >50 km")+
scale_y_continuous(breaks = seq(0, 14, 2))
lake_prox<-c("0 - 1", ">1 - 5")
odds<-c(3.1, 1.5)
lb<-c(2.2, 1.2)
ub<-c(4.3, 1.9)
lake_prox_df<-data.frame(lake_prox,
odds,
lb, ub)
is.factor(lake_prox_df$lake_prox)
levels(lake_prox_df$lake_prox)
lake_prox_df$lake_prox<-relevel(lake_prox_df$lake_prox,
ref ="0 - 1")
p_lake<-ggplot(data = lake_prox_df,
aes(x = Proximity,
y = odds,
ymin = lb,
ymax = ub))+
geom_pointrange()+
theme_light()+
xlab("Distance to lakes (km)")+
ylab("Odds of visiting the lakes weekly\ncompared to >5 km")
scale_y_continuous(breaks = seq(0, 14, 2))
p_lake
Proximity<-c("0 - 1", ">1 - 5", ">5 - 25",
">25 - 50")
odds<-c(8.4, 4.7, 2.2, 1.4)
lb<-c(5.3, 2.9, 1.6, 1)
ub<-c(13.3, 7.6, 3.1, 2)
coast_prox_df<-data.frame(Proximity,
odds,
lb, ub)
coast_prox_df
rm(Proximity)
rm(lb)
rm(ub)
rm(odds)
is.factor(coast_prox_df$coast_prox)
is.factor(coast_prox_df$Proximity)
levels(coast_prox_df$Proximity)
coast_prox_df$Proximity = factor(coast_prox_df$Proximity,
levels(coast_prox_df$Proximity)[c(4, 1, 3, 2)])
p_coast<-ggplot(data = coast_prox_df,
aes(x = Proximity,
y = odds,
ymin = lb,
ymax = ub))+
geom_pointrange()+
theme_light()+
xlab("Distance to coast (km)")+
ylab("Odds of visiting the coast weekly\ncompared to >50 km")+
scale_y_continuous(breaks = seq(0, 14, 2))
p_coast
Proximity<-c("0 - 1", ">1 - 5")
odds<-c(3.1, 1.5)
lb<-c(2.2, 1.2)
ub<-c(4.3, 1.9)
lake_prox_df<-data.frame(Proximity,
odds,
lb, ub)
lake_prox_df$Proximity<-relevel(lake_prox_df$Proximity,
ref ="0 - 1")
levels(lake_prox_df$Proximity)
p_lake<-ggplot(data = lake_prox_df,
aes(x = Proximity,
y = odds,
ymin = lb,
ymax = ub))+
geom_pointrange()+
theme_light()+
xlab("Distance to lakes (km)")+
ylab("Odds of visiting the lakes weekly\ncompared to >5 km")
p_lake
Proximity<-c("0 - 1", ">1 - 2.5")
odds<-c(1.6, 1.1)
lb<-c(1.2, 0.9)
ub<-c(2, 1.3)
river_prox_df<-data.frame(Proximity,
odds,
lb, ub)
levels(river_prox_df$Proximity)
river_prox_df$Proximity<-relevel(river_prox_df$Proximity,
ref = "0 - 1")
p_river<-ggplot(data = river_prox_df,
aes(x = Proximity,
y = odds,
ymin = lb,
ymax = ub))+
geom_pointrange()+
theme_light()+
xlab("Distance to rivers (km)")+
ylab("Odds of visiting the rivers weekly\ncompared to >5 km")
p_river
library(gridExtra)
grid.arrange(p_coast, p_lake,p_river, ncol=3)
p_lake<-ggplot(data = lake_prox_df,
aes(x = Proximity,
y = odds,
ymin = lb,
ymax = ub))+
geom_pointrange()+
theme_light()+
xlab("Distance to lakes (km)")+
ylab("Odds of visiting the lakes weekly\ncompared to >5 km")
p_lake<-ggplot(data = lake_prox_df,
aes(x = Proximity,
y = odds,
ymin = lb,
ymax = ub))+
geom_pointrange()+
theme_light()+
xlab("Distance to lakes (km)")+
ylab("Odds of visiting the lakes weekly\ncompared to >5 km")+
scale_y_continuous(breaks = seq(0, 14, 2))
p_river<-ggplot(data = river_prox_df,
aes(x = Proximity,
y = odds,
ymin = lb,
ymax = ub))+
geom_pointrange()+
theme_light()+
xlab("Distance to rivers (km)")+
ylab("Odds of visiting the rivers weekly\ncompared to >5 km")+
scale_y_continuous(breaks = seq(0, 14, 2))
grid.arrange(p_coast, p_lake,p_river, ncol=3)
p_river<-ggplot(data = river_prox_df,
aes(x = Proximity,
y = odds,
ymin = lb,
ymax = ub))+
geom_pointrange()+
theme_light()+
xlab("Distance to rivers (km)")+
ylab("Odds of visiting the rivers weekly\ncompared to >5 km")+
scale_y_continuous(breaks = seq(0, 14, 2), limits = c(0, 14))
p_coast<-ggplot(data = coast_prox_df,
aes(x = Proximity,
y = odds,
ymin = lb,
ymax = ub))+
geom_pointrange()+
theme_light()+
xlab("Distance to coast (km)")+
ylab("Odds of visiting the coast weekly\ncompared to >50 km")+
scale_y_continuous(breaks = seq(0, 14, 2), limits = c(0, 14))
grid.arrange(p_coast, p_lake,p_river, ncol=3)
p_lake<-ggplot(data = lake_prox_df,
aes(x = Proximity,
y = odds,
ymin = lb,
ymax = ub))+
geom_pointrange()+
theme_light()+
xlab("Distance to lakes (km)")+
ylab("Odds of visiting the lakes weekly\ncompared to >5 km")+
scale_y_continuous(breaks = seq(0, 14, 2), limits = c(0, 14))
grid.arrange(p_coast, p_lake,p_river, ncol=3)
grid.arrange(p_coast, p_lake,p_river, ncol=3)
load("C:/Users/jkg209/r_figs/NP_consultation/workspace_032020.RData")
names(responses)
install.packages("openstreetmap")
install.packages("OpenStreetMap")
library(OpenStreetMap)
penryn_basemap<-openmap(c(50.1765, -5.1288), c(50.1622, -5.0822))
library(OpenStreetMap)
install.packages("OpenStreetMap",lib = "C:\Users\jkg209\r_packages")
install.packages("OpenStreetMap",lib = "C:\Users\jkg209\r_packages")
install.packages("OpenStreetMap",lib = "C:\\Users\\jkg209\\r_packages")
library(OpenStreetMap, lib.loc = "C:\\Users\\jkg209\\r_packages")
library(OpenStreetMap, lib.loc = "C:\\Users\\jkg209\\r_packages")
penryn_basemap<-openmap(c(50.1765, -5.1288), c(50.1622, -5.0822))
library(lib.loc =  "C:\\Users\\jkg209\\r_packages")
library(rJava, lib.loc = "C:\\Users\\jkg209\\r_packages")
library(OpenStreetMap, lib.loc = "C:\\Users\\jkg209\\r_packages")
Sys.setenv(JAVA_HOME="C:\\Program Files (x86)\\Java\\jre1.8.0_241")
library(OpenStreetMap, lib.loc = "C:\\Users\\jkg209\\r_packages")
library(rJava, lib.loc = "C:\\Users\\jkg209\\r_packages")
install.packages("OpenStreetMap")
library(OpenStreetMap)
install.packages("rJava")
install.packages("OpenStreetMap")
library(OpenStreetMap)
version()
version
library(lavaan)
data(HolzingerSwineford1939)
install.packages("lavaan")
library(lavaan)
data(HolzingerSwineford1939)
head(HolzingerSwineford1939)
names(HolzingerSwineford1939)
knitr::opts_chunk$set(echo = TRUE)
##Get data
data(PoliticalDemocracy)
head(PoliticalDemocracy)
text.model<-'textspeed =~ x4 + x5 + x6 + x7 + x8 + x9'
text.fit<-cfa(model = text.model, data = HolzingerSwineford1939)
summary(text.fit)
##Get data
data(PoliticalDemocracy)
head(PoliticalDemocracy)
politics.model<-'poldemo60=~ y1 + y2 + y3 + y4'
politics.fit<-cfa(politics.model, PoliticalDemocracy)
summary(politics.fit)
summary(text.fit, standardized = TRUE )
summary(text.fit, standardized = TRUE, fit.measures=TRUE )
summary(politics.fit, standardized= TRUE, fit.measures=TRUE )
install.packages("ggdist")
library(ggdist)
install.packages("ggdist", lib = "C:\\r_packages_test")
setwd("C:\\Users\\jkg209\\OneDrive - University of Exeter\\Sonic_kayak_sound_dats\\20-08-07-amber-durgan\\sound_results)
setwd("C:\\Users\\jkg209\\OneDrive - University of Exeter\\Sonic_kayak_sound_dats\\20-08-07-amber-durgan\\sound_results")
setwd("C:\\Users\\jkg209\\OneDrive - University of Exeter\\Sonic_kayak_sound_dats\\20-08-07-amber-durgan\\sound_results")
list_files<-list.files(pattern = "Helford")
data<-rbind(data, data_2)
for (i in 1:length(list_files)){
if (i == 1){
data<-read.csv(list_files[i])
}else{
data_2<-read.csv(list_files[i])
data<-rbind(data, data_2)
}
}
names(data)
names(data_2)
list_files<-list.files(pattern = "Helford_ ")
for (i in 1:length(list_files)){
if (i == 1){
data<-read.csv(list_files[i])
}else{
data_2<-read.csv(list_files[i])
data<-rbind(data, data_2)
}
}
rm(data_2)
names(data_2)
names(data)
plot(data$time_from_start_s, data$tol_cf_25Hz)
plot(data$time_from_start_s, 10*log10(data$tol_cf_25Hz))
ind<-match(names(data), "tol")
ind<-match(names(data), "tol*")
ind
ind<-which(names(data)=="tol*")
ind<-grep(names(data),"tol*")
ind<-grep("tol*",names(data))
plot(data$time_from_start_s,
10*log10(data$tol_cf_25Hz),
pch = 20)
names(data)
tidy_tols<-gather(data[,3:33], key= "tol_band",
value = "sound_level",
-abs_time, -time_from_start_s)
library(tidyr)
library(glue)
install.packages("glue")
library(tidyr)
tidy_tols<-gather(data[,3:33], key= "tol_band",
value = "sound_level",
-abs_time, -time_from_start_s)
head(tidy_tols)
library(ggplot2)
is.factor(tidy_tols$tol_band)
names(tidy_tols)
tidy_tols$tol_band<-as.factor(tidy_tols$tol_band)
levels(tidy_tols$tol_band)
tidy_tols$tol_band = factor(tidy_tols$tol_band,
levels(tidy_tols$tol_band)[c(14, 15, 20, 23, 26, 29, 3, 6, 9, 11, 13, 17, 19, 22, 25, 28, 2, 5,10, 12, 16,18, 21, 24, 27, 1, 4, 7 )])
levels(tidy_tols$tol_band)
ggplot(tidy_tols,
aes(x= time_from_start,
y = tol_band,
fill=10*log10(sound_level)))+
theme_bw() +
geom_tile()))
ggplot(tidy_tols,
aes(x= time_from_start,
y = tol_band,
fill=10*log10(sound_level)))+
theme_bw() +
geom_tile())
ggplot(tidy_tols,
aes(x= time_from_start,
y = tol_band,
fill=10*log10(sound_level)))+
theme_bw() +
geom_tile()
names(tidy_tols)
ggplot(tidy_tols,
aes(x= time_from_start_s,
y = tol_band,
fill=10*log10(sound_level)))+
theme_bw() +
geom_tile()
ind<-which(is.na(tidy_tols$tol_band)==FALSE)
length(ind)
tidy_tols<-tidy_tols[ind,]
ggplot(tidy_tols,
aes(x= time_from_start_s,
y = tol_band,
fill=10*log10(sound_level)))+
theme_bw() +
geom_tile()
ggplot(tidy_tols,
aes(x= time_from_start_s,
y = tol_band,
fill=10*log10(sound_level)))+
theme_bw() +
+ scale_fill_continuous(type = "viridis")+
geom_tile()
ggplot(tidy_tols,
aes(x= time_from_start_s,
y = tol_band,
fill=10*log10(sound_level)))+
theme_bw() +
scale_fill_continuous(type = "viridis")+
geom_tile()
ggplot(tidy_tols,
aes(x= time_from_start_s,
y = tol_band,
fill=10*log10(sound_level)))+
theme_bw() +
scale_fill_continuous(type = "viridis",
names = "TOL dB re 1 µPa")+
geom_tile()
ggplot(tidy_tols,
aes(x= time_from_start_s,
y = tol_band,
fill=10*log10(sound_level)))+
theme_bw() +
scale_fill_continuous(type = "viridis",
name = "TOL dB re 1 µPa")+
geom_tile()
library(stringr)
tidy_tols$cf<-str_replace(tidy_tols$tol_band,
"tol_cf_", replacement="")
head(tidy_tols)
ggplot(tidy_tols,
aes(x= time_from_start_s,
y = cf,
fill=10*log10(sound_level)))+
theme_bw() +
scale_fill_continuous(type = "viridis",
name = "TOL dB re 1 µPa")+
geom_tile()
is.factor(tidy_tols$cf)
tidy_tols$cf<-as.factor(tidy_tols$cf)
levels(tidy_tols$cf)
tidy_tols$cf = factor(tidy_tols$cf,
levels(tidy_tols$cf)[c(13, 14, 19, 22, 25, 28, 2, 5, 8, 10, 12, 16, 18, 21,
24, 27, 1, 4,9, 11, 15,17, 20, 23, 26, 1, 4, 7 )])
tidy_tols$cf = factor(tidy_tols$cf,
levels(tidy_tols$cf)[c(13, 14, 19, 22, 25, 28, 2, 5, 8, 10, 12, 16, 18, 21,
24, 27, 1, 4,9, 11, 15,17, 20, 23, 26, 1, 4, 7 )])
tidy_tols$cf<-str_replace(tidy_tols$tol_band,
"tol_cf_", replacement="")
is.factor(tidy_tols$cf)
tidy_tols$cf<-as.factor(tidy_tols$cf)
levels(tidy_tols$cf)
tidy_tols$cf = factor(tidy_tols$cf,
levels(tidy_tols$cf)[c(13, 14, 19, 22, 25, 28, 3, 6, 8, 10, 12, 16, 18, 21,
24, 27, 2, 5,9, 11, 15,17, 20, 23, 26, 1, 4, 7 )])
ggplot(tidy_tols,
aes(x= time_from_start_s,
y = cf,
fill=10*log10(sound_level)))+
theme_bw() +
scale_fill_continuous(type = "viridis",
name = "TOL dB re 1 µPa")+
geom_tile()
